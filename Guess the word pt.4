import os
import random
import time

class CustomColors:
    PURPLE = '\033[95m'  # Light purple
    ORANGE = '\033[38;5;208m'  # Orange (ANSI 256 color code)
    RED = '\033[31m'  # Red
    BLUE = '\033[34m'  # Blue
    GREEN = '\033[32m'  # Green
    WHITE = '\033[37m'  # White
    YELLOW = '\033[33m'  # Yellow
    MAROON = '\033[38;5;88m'  # Maroon
    GOLD = '\033[38;5;220m'  # Gold (ANSI 256 color code)
    BLACK = '\033[30m'  # Black
    BROWN = '\033[38;5;94m'  # Brown (ANSI 256 color code)
    GRAY = '\033[38;5;8m'  # Gray (ANSI 256 color code)
    SILVER = '\033[38;5;7m'  # Silver-like gray (ANSI 256 color code)
    MUSICAL_BLUE = '\033[38;5;32m'  # A variant of blue (musical blue)
    RESET = '\033[0m'  # Reset to default color

# Ansi Escape Code (Non classed)
red = '\033[31m'
green = '\033[32m'
purple = '\033[35m'
bright_green = '\033[92m'
underline = '\033[4m'
reset = '\033[0m'

# Define possible words, their conferences, logos, and colors
words = {
    'raptors': {'conference': 'Eastern', 'logo': 'A dinosaur clawing a basketball', 'color': CustomColors.RED},
    'mavericks': {'conference': 'Western', 'logo': 'A horse head inside a circle', 'color': CustomColors.BLUE},
    'celtics': {'conference': 'Eastern', 'logo': 'A leprechaun spinning a basketball', 'color': CustomColors.GREEN},
    'clippers': {'conference': 'Western', 'logo': 'A red and blue basketball with waves', 'color': CustomColors.RED + CustomColors.BLUE},
    'spurs': {'conference': 'Western', 'logo': 'A spur (cowboy gear)', 'color': CustomColors.WHITE},
    'nuggets': {'conference': 'Western', 'logo': 'Two crossed pickaxes', 'color': CustomColors.YELLOW},
    'lakers': {'conference': 'Western', 'logo': 'A basketball with the word "Lakers"', 'color': CustomColors.YELLOW + CustomColors.PURPLE},
    'knicks': {'conference': 'Eastern', 'logo': 'A basketball with a blue triangle', 'color': CustomColors.ORANGE + CustomColors.BLUE},
    'bucks': {'conference': 'Eastern', 'logo': 'A deer head with antlers', 'color': CustomColors.GREEN},
    'wizards': {'conference': 'Eastern', 'logo': 'A wizard holding a basketball', 'color': CustomColors.BLUE + CustomColors.RED},
    'warriors': {'conference': 'Western', 'logo': 'A bridge with a basketball', 'color': CustomColors.GOLD + CustomColors.BLUE},
    'cavaliers': {'conference': 'Eastern', 'logo': 'A sword through a basketball', 'color': CustomColors.MAROON + CustomColors.YELLOW},
    'heat': {'conference': 'Eastern', 'logo': 'A flaming basketball', 'color': CustomColors.RED + CustomColors.YELLOW},
    'bulls': {'conference': 'Eastern', 'logo': 'A bull’s head', 'color': CustomColors.RED + CustomColors.BLACK},
    'pistons': {'conference': 'Eastern', 'logo': 'A piston with a basketball', 'color': CustomColors.BLUE + CustomColors.RED},
    'jazz': {'conference': 'Western', 'logo': 'A musical note and basketball', 'color': CustomColors.MUSICAL_BLUE + CustomColors.YELLOW},
    'trailblazers': {'conference': 'Western', 'logo': 'A red and black diagonal stripe', 'color': CustomColors.RED + CustomColors.BLACK},
    'thunder': {'conference': 'Western', 'logo': 'A basketball inside a lightning bolt', 'color': CustomColors.ORANGE + CustomColors.BLUE},
    'kings': {'conference': 'Western', 'logo': 'A crown with a basketball', 'color': CustomColors.PURPLE + CustomColors.SILVER},
    'sixers': {'conference': 'Eastern', 'logo': 'A basketball with stars and the word "Sixers"', 'color': CustomColors.RED + CustomColors.BLUE},
    'timberwolves': {'conference': 'Western', 'logo': 'A wolf howling at a moon', 'color': CustomColors.GREEN + CustomColors.BLUE},
    'suns': {'conference': 'Western', 'logo': 'A sun with a basketball', 'color': CustomColors.PURPLE + CustomColors.ORANGE},
    'pelicans': {'conference': 'Western', 'logo': 'A pelican holding a basketball', 'color': CustomColors.RED + CustomColors.BLUE},
    'grizzlies': {'conference': 'Western', 'logo': 'A bear’s head', 'color': CustomColors.PURPLE + CustomColors.BROWN},
    'rockets': {'conference': 'Western', 'logo': 'A rocket flying with a basketball', 'color': CustomColors.RED + CustomColors.GRAY},
    'pacers': {'conference': 'Eastern', 'logo': 'A yellow and blue "P" with a basketball', 'color': CustomColors.YELLOW + CustomColors.BLUE},
    'hawks': {'conference': 'Eastern', 'logo': 'A hawk with a basketball', 'color': CustomColors.RED + CustomColors.BLACK},
    'hornets': {'conference': 'Eastern', 'logo': 'A hornet holding a basketball', 'color': CustomColors.PURPLE + CustomColors.GREEN},
    'magic': {'conference': 'Eastern', 'logo': 'A basketball with stars', 'color': CustomColors.BLUE + CustomColors.SILVER}
}

# Function to clear the screen
def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

# Function to animate text
def type(text):
    for char in text:
        print(char, end='', flush=True)
        time.sleep(0.009)
    print()

# Function to update dashes for correct guesses
def update_dashes(secret_word, dashes, guess):
    result = ''
    for i in range(len(secret_word)):
        if secret_word[i] == guess:
            result += guess
        else:
            result += dashes[i]
    return result

def get_guess(dashes, incorrect_guesses_left, conference, logo_hint, logo_color, hint_index, guessed_letters):
    while True:
        print(dashes)
        print(f'{incorrect_guesses_left} incorrect guesses left.')
        user_guess = input("Guess (or type 'hint' for a clue): ").lower()

        # Check if the guess is 'hint' and process hints accordingly
        if user_guess == 'hint':
            if hint_index == 0:
                print(f"{underline}Hint: The secret word is an NBA team name.{reset}\n")
                hint_index = 1
            elif hint_index == 1:
                print(f"{underline}Hint: The team is in the {conference} Conference.{reset}\n")
                hint_index = 2
            elif hint_index == 2:
                print(f"{underline}{logo_color}Hint: The team's logo is {logo_hint}{reset}\n")
                hint_index = 3
            else:
                print(f"{red}No more hints available!{reset}\n")
            continue

        # Check for repeated guesses
        if user_guess in guessed_letters:
            print(f"{red}You already guessed that letter!{reset}\n")
            incorrect_guesses_left -= 1
            continue
        # Check if the guess is valid
        if user_guess == '':  # Empty input
            print(f"{red}You must guess something!{reset}\n")
            incorrect_guesses_left -= 1
            continue
        if len(user_guess) != 1:  # More than one character
            print(f"{red}Your guess must have exactly one character!{reset}\n")
            incorrect_guesses_left -= 1
            continue
        if user_guess.isdigit():  # Contains a digit
            print(f"{red}Secret word does not contain any integers!{reset}\n")
            incorrect_guesses_left -= 1
            continue
        if not user_guess.islower():  # Not a lowercase letter
            print(f"{red}Your guess must be a lowercase letter!{reset}\n")
            incorrect_guesses_left -= 1
            continue
        # If the guess is valid, add it to guessed_letters and return
        guessed_letters.add(user_guess)
        return user_guess, hint_index, incorrect_guesses_left
    
# Function to start a new game
def restart_game():
    clear_screen()
    print("Would you like to play again? (yes/no)")
    user_choice = input("> ").lower()
    while True:
        if user_choice == "yes":
            clear_screen()
            start_game()
            break
        elif user_choice == "no":
            clear_screen()
            print("Thanks for playing!")
            break
        else:
            print(f"{red}Invalid Input! (Input yes/no){reset}")
            user_choice = input("> ").lower()


# Main game loop
def start_game():
    secret_word = random.choice(list(words.keys()))
    team_info = words[secret_word]
    conference = team_info['conference']
    logo_hint = team_info['logo']
    logo_color = team_info['color']
    dashes = '-' * len(secret_word)
    incorrect_guesses_left = 15
    hint_index = 0
    guessed_letters = set()  # Track guessed letters

    clear_screen()
    type(f"{underline}Welcome to Guess the Word!{reset}")
    time.sleep(1)

    clear_screen()
    while incorrect_guesses_left > 0:
        guess, hint_index, incorrect_guesses_left = get_guess(dashes, incorrect_guesses_left, conference, logo_hint, logo_color, hint_index, guessed_letters)

        # Check if the guess is correct
        if guess in secret_word:
            print(f"{green}That letter is in the word!{reset}\n")
            dashes = update_dashes(secret_word, dashes, guess)
        else:
            # Decrement incorrect guesses only for invalid guesses
            print(f"{red}That letter is not in the word.{reset}\n")
            incorrect_guesses_left -= 1

        # Check if the player has won
        if dashes == secret_word:
            clear_screen()
            print(f'{logo_color}Congratulations, you won! The secret word was {secret_word}{reset}.')
            time.sleep(2)
            break
        
        # Check if the player has lost
        if incorrect_guesses_left == 0:
            clear_screen()
            print(f'{logo_color}Sorry, you ran out of guesses. The secret word was {secret_word}{reset}.')
            time.sleep(2)
            break
        
    restart_game()

# Start the game for the first time
start_game()
